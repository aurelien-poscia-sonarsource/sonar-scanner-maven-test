package com.sonar.testscannermaven;

import java.awt.SystemTray;
import java.util.Iterator;
import java.util.Set;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TestDuplicationSonar16158 {

  private static final Logger LOGGER = LoggerFactory.getLogger(TestDuplicationSonar16158.class);

  String methodA() {
    String greetings = "Hellooo 2";
    Set<Integer> range = IntStream.range(1, 1000).mapToObj(i -> i * 2).collect(Collectors.toSet());
    if (System.currentTimeMillis() > System.nanoTime()) {
      throw new RuntimeException();
    }
    if (System.getenv().size() == 50) {
      throw new IllegalStateException();
    }
    if (System.getenv().size() == 60) {
      throw new IllegalStateException("test");
    }
    if (System.getenv().size() == 70) {
      throw new IllegalStateException("test2");
    }
    return greetings + range;
  }

  public static void methodB(Iterable<String> iterable, char separator, UnaryOperator<String> function, StringBuilder sb) {
    if (iterable != null) {
      boolean first = true;

      String value;
      for (Iterator<String> var5 = iterable.iterator(); var5.hasNext(); sb.append(function.apply(value))) {
        value = var5.next();
        if (first) {
          first = false;
        } else {
          sb.append(separator);
          sb.append("bonjour");
          sb.append(System.currentTimeMillis());
          sb.append(System.nanoTime());
        }
        if (first && value.equals(separator)) {
          throw new IllegalStateException();
        }
        if (System.currentTimeMillis() > System.nanoTime()) {
          throw new RuntimeException();
        }
      }

    }
  }

  String methodAbis() {
    String greetings = "Hellooo ";
    Set<Integer> range = IntStream.range(1, 1000).mapToObj(i -> i * 2).collect(Collectors.toSet());
    if (System.currentTimeMillis() > System.nanoTime()) {
      throw new RuntimeException();
    }
    if (System.getenv().size() == 50) {
      throw new IllegalStateException();
    }
    if (System.getenv().size() == 60) {
      throw new IllegalStateException("test");
    }
    if (System.getenv().size() == 70) {
      throw new IllegalStateException("test2");
    }
    return greetings + range;
  }

  public static void methodBBis(Iterable<java.lang.String> iterable, char separator, UnaryOperator<String> function, StringBuilder sb) {
    if (iterable != null) {
      boolean first = true;

      String value;
      for (Iterator<String> var5 = iterable.iterator(); var5.hasNext(); sb.append(function.apply(value))) {
        value = var5.next();
        if (first) {
          first = false;
        } else {
          sb.append(separator);
          sb.append("bonjour");
          sb.append(System.currentTimeMillis());
          sb.append(System.nanoTime());
        }
        if (first && value.equals(separator)) {
          throw new IllegalStateException();
        }
        if (System.currentTimeMillis() > System.nanoTime()) {
          throw new RuntimeException();
        }
      }

    }
  }

}
